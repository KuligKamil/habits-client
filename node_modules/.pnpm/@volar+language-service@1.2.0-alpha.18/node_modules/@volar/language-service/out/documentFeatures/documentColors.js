Object.defineProperty(exports, "__esModule", { value: true });
exports.register = void 0;
const featureWorkers_1 = require("../utils/featureWorkers");
const vscode = require("vscode-languageserver-protocol");
const shared = require("@volar/shared");
function register(context) {
    return (uri) => {
        return (0, featureWorkers_1.documentFeatureWorker)(context, uri, file => !!file.capabilities.documentSymbol, // TODO: add color capability setting
        (plugin, document) => { var _a; return (_a = plugin.findDocumentColors) === null || _a === void 0 ? void 0 : _a.call(plugin, document); }, (data, map) => map ? data.map(color => {
            const range = map.toSourceRange(color.range);
            if (range) {
                return vscode.ColorInformation.create(range, color.color);
            }
        }).filter(shared.notEmpty) : data, arr => arr.flat());
    };
}
exports.register = register;
//# sourceMappingURL=documentColors.js.map