Object.defineProperty(exports, "__esModule", { value: true });
exports.notEmpty = exports.sleep = exports.syntaxToLanguageId = exports.fileNameToUri = exports.uriToFileName = exports.normalizeFileName = void 0;
const vscode_uri_1 = require("vscode-uri");
function normalizeFileName(fsPath) {
    return uriToFileName(fileNameToUri(fsPath));
}
exports.normalizeFileName = normalizeFileName;
function uriToFileName(uri) {
    if (uri.startsWith('https://unpkg.com/')) {
        return '/__uri__/node_modules/' + uri.replace('https://unpkg.com/', '');
    }
    const _uri = vscode_uri_1.URI.parse(uri);
    if (_uri.scheme === 'file') {
        return _uri.fsPath.replace(/\\/g, '/');
    }
    else {
        return '/__uri__/' + uri.replace('://', '__uri_scheme__');
    }
}
exports.uriToFileName = uriToFileName;
function fileNameToUri(path) {
    if (path.startsWith('/__uri__/node_modules/')) {
        return path.replace('/__uri__/node_modules/', 'https://unpkg.com/');
    }
    if (path.startsWith('/__uri__/')) {
        return path.replace('/__uri__/', '').replace('__uri_scheme__', '://');
    }
    return vscode_uri_1.URI.file(path).toString();
}
exports.fileNameToUri = fileNameToUri;
function syntaxToLanguageId(syntax) {
    switch (syntax) {
        case 'js': return 'javascript';
        case 'cjs': return 'javascript';
        case 'mjs': return 'javascript';
        case 'ts': return 'typescript';
        case 'cts': return 'typescript';
        case 'mts': return 'typescript';
        case 'jsx': return 'javascriptreact';
        case 'tsx': return 'typescriptreact';
        case 'pug': return 'jade';
        case 'md': return 'markdown';
    }
    return syntax;
}
exports.syntaxToLanguageId = syntaxToLanguageId;
function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}
exports.sleep = sleep;
function notEmpty(value) {
    return value !== null && value !== undefined;
}
exports.notEmpty = notEmpty;
//# sourceMappingURL=index.js.map