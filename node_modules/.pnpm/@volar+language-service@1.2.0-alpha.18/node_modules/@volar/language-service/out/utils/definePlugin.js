var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.visitEmbedded = void 0;
function visitEmbedded(documents, current, cb, rootFile = current) {
    var _a;
    return __awaiter(this, void 0, void 0, function* () {
        for (const embedded of current.embeddedFiles) {
            if (!(yield visitEmbedded(documents, embedded, cb, rootFile))) {
                return false;
            }
        }
        for (const [_, map] of documents.getMapsByVirtualFileName(current.fileName)) {
            if (((_a = documents.getSourceByUri(map.sourceFileDocument.uri)) === null || _a === void 0 ? void 0 : _a.root) === rootFile) {
                if (!(yield cb(current, map))) {
                    return false;
                }
            }
        }
        return true;
    });
}
exports.visitEmbedded = visitEmbedded;
//# sourceMappingURL=definePlugin.js.map