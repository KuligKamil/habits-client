Object.defineProperty(exports, "__esModule", { value: true });
exports.register = void 0;
const featureWorkers_1 = require("../utils/featureWorkers");
const transformer = require("../transformer");
const shared = require("@volar/shared");
function register(context) {
    return (uri, positions) => {
        return (0, featureWorkers_1.languageFeatureWorker)(context, uri, positions, (positions, map, file) => {
            if (file.capabilities.documentFormatting) {
                const result = positions
                    .map(position => map.toGeneratedPosition(position))
                    .filter(shared.notEmpty);
                if (result.length) {
                    return [result];
                }
            }
            return [];
        }, (plugin, document, positions) => { var _a; return (_a = plugin.getSelectionRanges) === null || _a === void 0 ? void 0 : _a.call(plugin, document, positions); }, (item, map) => map ? transformer.asSelectionRanges(item, range => map.toSourceRange(range)) : item, results => {
            for (let i = 0; i < results[0].length; i++) {
                const first = results[0][i];
                let lastParent = first;
                while (lastParent.parent) {
                    lastParent = lastParent.parent;
                }
                for (let j = 1; j < results.length; j++) {
                    const other = results[j][i];
                    lastParent.parent = other;
                    while (lastParent.parent) {
                        lastParent = lastParent.parent;
                    }
                }
            }
            return results[0];
        });
    };
}
exports.register = register;
//# sourceMappingURL=selectionRanges.js.map