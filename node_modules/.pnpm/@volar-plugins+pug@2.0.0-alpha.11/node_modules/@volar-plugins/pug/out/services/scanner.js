Object.defineProperty(exports, "__esModule", { value: true });
exports.register = void 0;
function register(htmlLs) {
    return (pugDoc, initialOffset = 0) => {
        var _a;
        const htmlOffset = (_a = pugDoc.map.map.mappings
            .filter(mapping => mapping.sourceRange[0] >= initialOffset)
            .sort((a, b) => a.generatedRange[0] - b.generatedRange[0])[0]) === null || _a === void 0 ? void 0 : _a.generatedRange[0];
        if (htmlOffset === undefined)
            return;
        const htmlScanner = htmlLs.createScanner(pugDoc.htmlTextDocument.getText(), htmlOffset);
        // @ts-expect-error
        const scanner = {
            scan: () => {
                return htmlScanner.scan();
            },
            getTokenOffset: () => {
                var _a, _b;
                return (_b = (_a = pugDoc.map.map.toSourceOffset(htmlScanner.getTokenOffset())) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : -1;
            },
            getTokenEnd: () => {
                var _a, _b;
                return (_b = (_a = pugDoc.map.map.toSourceOffset(htmlScanner.getTokenEnd())) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : -1;
            },
            getTokenText: htmlScanner.getTokenText,
            getTokenLength: htmlScanner.getTokenLength,
            getTokenError: htmlScanner.getTokenError,
            getScannerState: htmlScanner.getScannerState,
        };
        return scanner;
    };
}
exports.register = register;
//# sourceMappingURL=scanner.js.map